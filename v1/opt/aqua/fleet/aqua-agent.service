[Unit]
Description=Aqua-Security
After=docker.service bootstrap.service
Requires=docker.service

[Service]
EnvironmentFile=/etc/environment
Environment="SCALOCK_TOKEN=/home/core/ethos-systemd/v1/lib/etcdauth.sh get /aqua/config/aqua-token"
Environment="IMAGE=/home/core/ethos-systemd/v1/lib/etcdauth.sh get /images/scalock-agent"
Environment="SCALOCK_GATEWAY_ENDPOINT=/home/core/ethos-systemd/v1/lib/etcdauth.sh get /aqua/config/gateway-host"

User=core
Restart=always
TimeoutStartSec=10m

ExecStartPre=/usr/bin/systemctl is-active update-os.timer
ExecStartPre=/usr/bin/sh -c  "if [[ -f /etc/profile.d/etcdctl.sh ]]; then source /etc/profile.d/etcdctl.sh;fi &&  docker pull $($IMAGE)"
ExecStartPre=-/usr/bin/docker kill aqua-launcher
ExecStartPre=-/usr/bin/docker rm aqua-launcher
ExecStartPre=-/home/core/ethos-systemd/v1/opt/aqua/util/aqua-socket.sh
ExecStart=/usr/bin/bash -c  "if [[ -f /etc/profile.d/etcdctl.sh ]]; then source /etc/profile.d/etcdctl.sh;fi &&  \
sudo docker run --name=aqua-launcher -v /var/run/docker.sock:/var/run/docker.sock  \
-e SCALOCK_SERVER=$($SCALOCK_GATEWAY_ENDPOINT)  \
-e SCALOCK_TOKEN=$($SCALOCK_TOKEN)  \
-e RESTART_CONTAINERS=no \
-e DOCKER_SCHEDULER=fleet  \
-e AQUA_RUN_WATCHER=yes  \
-e SILENT=yes  $($IMAGE)"

[Install]
WantedBy=multi-user.target

[X-Fleet]
Global=true
MachineMetadata=role=worker

